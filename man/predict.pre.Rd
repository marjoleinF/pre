% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pre.R
\name{predict.pre}
\alias{predict.pre}
\title{Predicted values based on final prediction rule ensemble}
\usage{
\method{predict}{pre}(
  object,
  newdata = NULL,
  type = "link",
  penalty.par.val = "lambda.1se",
  ...
)
}
\arguments{
\item{object}{object of class \code{\link{pre}}.}

\item{newdata}{optional \code{data.frame} of new (test) observations, including all
predictor variables used for deriving the prediction rule ensemble.}

\item{type}{character string. The type of prediction required; the default
\code{type = "link"} is on the scale of the linear predictors. Alternatively,
for count and factor outputs, \code{type = "response"} may be specified to obtain
the fitted mean and fitted probabilities, respectively; \code{type = "class"} 
returns the predicted class membership.}

\item{penalty.par.val}{character or numeric. Value of the penalty parameter
\eqn{\lambda} to be employed for selecting the final ensemble. The default
\code{"lambda.min"} employs the \eqn{\lambda} value within 1 standard
error of the minimum cross-validated error. Alternatively, 
\code{"lambda.min"} may be specified, to employ the \eqn{\lambda} value
with minimum cross-validated error, or a numeric value \eqn{>0} may be 
specified, with higher values yielding a sparser ensemble. To evaluate the 
trade-off between accuracy and sparsity of the final ensemble, inspect
\code{pre_object$glmnet.fit} and \code{plot(pre_object$glmnet.fit)}.}

\item{...}{further arguments to be passed to 
\code{\link[glmnet]{predict.cv.glmnet}}.}
}
\description{
\code{predict.pre} generates predictions based on the final prediction rule
ensemble, for training or new (test) observations
}
\details{
If \code{newdata} is not provided, predictions for training data will be 
returned.
}
\examples{
\donttest{set.seed(1)
train <- sample(1:sum(complete.cases(airquality)), size = 100)
set.seed(42)
airq.ens <- pre(Ozone ~ ., data = airquality[complete.cases(airquality),][train,])
predict(airq.ens)
predict(airq.ens, newdata = airquality[complete.cases(airquality),][-train,])}
}
\seealso{
\code{\link{pre}}, \code{\link{plot.pre}}, 
\code{\link{coef.pre}}, \code{\link{importance}}, \code{\link{cvpre}}, 
\code{\link{interact}}, \code{\link{print.pre}}, 
\code{\link[glmnet]{predict.cv.glmnet}}
}
